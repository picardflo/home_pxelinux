###################################################################
## .:: Script d'installation Server Ubuntu 16.04 LTS::.          ##
################################################################### 

###################################################################
##    .::  Kickstart options ::.                                 ##
###################################################################

#System language
lang fr_FR.UTF-8

#Language modules to install
langsupport fr_FR.UTF-8

#System keyboard
keyboard fr_oss

#System mouse
mouse

#System timezone
timezone Europe/Paris

#Root password
#rootpw --iscrypted $1$ELOssq6u$uXJqRO.o9dAWUdR/enoIR1

#Initial user
#user customuser --fullname "customuser" --iscrypted --password $1$.n5hwhNK$CzDHSVxB7TO0/rV9P1RtF0

#Reboot after installation
#reboot --eject

#Use text mode install
text

#Install OS instead of upgrade
install

#Use Web installation
url --url http://mirror.home.lan/mirror/fr.archive.ubuntu.com/ubuntu/

#System bootloader configuration
bootloader --location=mbr 

#Clear the Master Boot Record
zerombr yes

#Partition clearing information
clearpart --all --initlabel 

#Disk partitioning information
#part / --fstype ext4 --size 50000 
#part swap --size 2048 
#part /home --fstype ext4 --size 1 --grow 

#System authorization infomation
auth --useshadow --enablemd5 

#Network information
network --bootproto=dhcp --device=eth0

#Firewall configuration
firewall --disabled 

#X Window System configuration information
xconfig --depth=32 --resolution=1024x768 --defaultdesktop=GNOME --startxonboot


%packages
###################################################################
##    .::  Ubuntu Packages from officials repositories  ::.      ##
###################################################################

@ubuntu-server
openssh-server
build-essential
ftp
tftp
mc
ssh
git
tree
zip
nmap
htop
screen
vim

sssd 
sssd-tools 
samba-common 
samba-common-bin 
samba-libs 
adcli 
snmpd
qemu-guest-agent

ntp
apt-transport-https
bmon
slurm
iftop
mysql-client
gcc
dos2unix
acpi
dnsutils

nfs-common
cifs-utils

mailutils-common

%pre
###################################################################
##                                                               ##
###################################################################

%post

###################################################################
## .:: Install other package from other repository ::.           ##
###################################################################

#Kerberos 5 - NI
export DEBIAN_FRONTEND=noninteractive
apt-get install krb5-user -y

#change hostname in /etc/hosts & /etc/hostname
hostn=$(hostname)
newhost=server-$(date +"%m_%y")-$(date +"%H%M")
sed -i "s/$hostn/$newhost/g" /etc/hosts
sed -i "s/$hostn/$newhost/g" /etc/hostname

#motd
echo Kickstarted : $(date +"%m-%d-%y") - $(date +"%H:%M") >> /etc/motd

# Fix GRUB - VGA & IPv6 disable
sed -i.back 's/GRUB_CMDLINE_LINUX_DEFAULT="splash quiet"/GRUB_CMDLINE_LINUX_DEFAULT="vga=788 ipv6.disable=0 net.ifnames=0"/g' /etc/default/grub
update-grub

# Set local repo
cat > /etc/apt/sources.list << __EOF__
#------------------------------------------------------------------------------#
#                            LOCAL UBUNTU REPOS                                #
#------------------------------------------------------------------------------#

###### Ubuntu Main Repos
deb http://mirror.home.lan/mirror/fr.archive.ubuntu.com/ubuntu/ bionic main restricted universe multiverse 

###### Ubuntu Update Repos
deb http://mirror.home.lan/mirror/fr.archive.ubuntu.com/ubuntu/ bionic-security main restricted universe multiverse 
deb http://mirror.home.lan/mirror/fr.archive.ubuntu.com/ubuntu/ bionic-updates main restricted universe multiverse 

###### Ubuntu Partner Repo
deb http://mirror.home.lan/mirror/archive.canonical.com/ubuntu bionic partner
__EOF__

apt update
%end

### Install LibreNMS Agent ###

# Install git
apt update && apt install git -y

# Get agent
git clone https://github.com/librenms/librenms-agent.git /opt/librenms-agent
# Copy BIN
cp /opt/librenms-agent/check_mk_agent /usr/bin/check_mk_agent
chmod +x /usr/bin/check_mk_agent

# Create Service
cp /opt/librenms-agent/check_mk@.service /opt/librenms-agent/check_mk.socket /etc/systemd/system

# Create plugin folder
mkdir -p /usr/lib/check_mk_agent/plugins /usr/lib/check_mk_agent/local

# Enable agent (on startup) & start it
systemctl enable check_mk.socket && systemctl start check_mk.socket

# check service
systemctl status check_mk.socket

## END ##

